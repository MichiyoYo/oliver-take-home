{"version":3,"sources":["Components/Home.js","Components/List.js","Components/ReviewListItem.js","Components/ReviewList.js","Components/Product.js","img/loading.gif","Components/ProductListItem.js","Components/ProductList.js","Components/ReviewForm.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","src","alt","href","React","Component","List","items","resourceName","ItemComponent","itemComponent","map","item","i","ReviewListItem","review","author","star_rating","headline","body","Avatar","Rating","name","value","readOnly","ReviewList","reviews","Product","props","id","useParams","useLocation","state","imgUrl","avgRating","Box","sx","flexGrow","Grid","container","direction","justifyContent","alignItems","spacing","xs","md","sm","length","to","pathname","ProductListItem","product","useContext","ProductContext","products","setProducts","useState","setReviews","setAvgRating","loading","setImgUrl","useEffect","axios","get","then","res","data","catch","err","console","error","avg","forEach","Number","Math","floor","updatedProduct","prodToUpdateIdx","findIndex","prod","slice","height","width","ProductList","defaultValues","ReviewForm","formValues","setFormValues","handleInputChange","e","target","log","onSubmit","preventDefault","post","setTimeout","window","open","justify","onChange","TextField","label","type","fullWidth","multiline","Button","variant","color","createContext","OliverTakeHome","Provider","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6837af37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/hwery4evq/image/upload/c_scale,w_400/v1/assets/toast\"\r\n          alt=\"welcome\"\r\n        />\r\n        <h1>Welcome!</h1>\r\n\r\n        <h2>Oliver Space Take-Home Instructions</h2>\r\n        <p>\r\n          Your mission, if you choose to accept it, is to build out a mock of a\r\n          product reviews flow. This includes a page for users to submit their\r\n          reviews as well as a page to read reviews.\r\n        </p>\r\n        <h3>Requirements</h3>\r\n        <ul>\r\n          <li>\r\n            Create a page where a user can review a given product with the\r\n            following information:\r\n          </li>\r\n          <ul>\r\n            <li>Their name (the author)</li>\r\n            <li>A star rating</li>\r\n            <li>Headline text (a title for their review)</li>\r\n            <li>The body of the review (a longer paragraph)</li>\r\n          </ul>\r\n          <li>\r\n            Create a page where a user can view all of the reviews for a given\r\n            product\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          Please spend 2 hours completing this task to whatever extent you can\r\n          finish, but don't go over time. The expectation is not that you will\r\n          get through all of the requirements, so please add notes on anything\r\n          else you would have done with more time. Feel free to use any\r\n          third-party libraries that you find helpful.\r\n        </p>\r\n\r\n        <h3>Running the App</h3>\r\n        <ul>\r\n          <li>\r\n            Run <code>npm install</code> first\r\n          </li>\r\n          <li>\r\n            Start the mock JSON server on port 3004 using{\" \"}\r\n            <code>json-server --watch db.json</code>\r\n          </li>\r\n          <li>\r\n            Start the React app on port 3000 using <code>npm start</code>\r\n          </li>\r\n          <li>\r\n            You can then make requests to{\" \"}\r\n            <code>http://localhost:3004/products</code>,{\" \"}\r\n            <code>http://localhost:3004/reviews</code> or{\" \"}\r\n            <code>http://localhost:3004/products/:id/reviews</code> using axios,\r\n            or any of your preferred methods\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          More info on json-server{\" \"}\r\n          <a href=\"https://www.npmjs.com/package/json-server\">here</a>\r\n        </p>\r\n\r\n        <p>\r\n          This project was bootstrapped with{\" \"}\r\n          <a href=\"https://github.com/facebook/create-react-app\">\r\n            Create React App\r\n          </a>\r\n        </p>\r\n\r\n        <h4>\r\n          Best of luck! Feel free to email{\" \"}\r\n          <a href=\"mailto:frontend-eng@oliver.space\">\r\n            frontend-eng@oliver.space\r\n          </a>\r\n          if you have any questions while you're completing the exercise. We're\r\n          happy to help :)\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction List({ items, resourceName, itemComponent: ItemComponent }) {\r\n  return (\r\n    <>\r\n      {items.map((item, i) => (\r\n        <ItemComponent key={i} {...{ [resourceName]: item }} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Rating, Avatar } from \"@mui/material\";\r\n\r\nfunction ReviewListItem({ review }) {\r\n  const { author, star_rating, headline, body } = review;\r\n\r\n  return (\r\n    <li className=\"ReviewListItem\">\r\n      <div className=\"review_author\">\r\n        <Avatar\r\n          className=\"author_avatar\"\r\n          alt={author}\r\n          src={`https://avatars.dicebear.com/api/human/${author}.svg`}\r\n        />\r\n        <div className=\"right-wrapper\">\r\n          <h3 className=\"author_name\">{author}</h3>\r\n          <Rating\r\n            className=\"review_rating\"\r\n            name=\"read-only\"\r\n            value={star_rating}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <h4 className=\"review_headline\">{headline}</h4>\r\n      <p className=\"review_body\">{body}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ReviewListItem;\r\n","import React from \"react\";\r\nimport List from \"./List\";\r\nimport ReviewListItem from \"./ReviewListItem\";\r\n\r\nfunction ReviewList({ reviews }) {\r\n  return (\r\n    <ul className=\"ReviewList\">\r\n      <List\r\n        items={reviews}\r\n        resourceName=\"review\"\r\n        itemComponent={ReviewListItem}\r\n      />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ReviewList;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Rating, Box } from \"@mui/material\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport ReviewList from \"./ReviewList\";\r\nimport { ProductContext } from \"../App\";\r\n\r\nfunction Product(props) {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const { name, imgUrl, avgRating, reviews } = location.state;\r\n\r\n  return (\r\n    <div className=\"Product\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          className=\"product_header\"\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={{ xs: 2, md: 3 }}\r\n        >\r\n          <Grid item sm={12} md={6} className=\"grid-item\">\r\n            <img className=\"product_img\" src={imgUrl} alt={name} />\r\n          </Grid>\r\n          <Grid item sm={12} md={6} className=\"grid-item\">\r\n            <h2>{name}</h2>\r\n            <div className=\"product_reviews\">\r\n              <Rating\r\n                className=\"reviews_stars\"\r\n                name=\"read-only\"\r\n                value={avgRating}\r\n                readOnly\r\n              />\r\n              <p className=\"product_avg\">\r\n                From <span className=\"reviews_number\">{reviews.length}</span>{\" \"}\r\n                review{reviews.length === 1 ? \"\" : \"s\"}\r\n              </p>\r\n            </div>\r\n            <Link\r\n              className=\"btn\"\r\n              to={{\r\n                pathname: `/product/${id}/add-review`,\r\n                state: {\r\n                  imgUrl: imgUrl,\r\n                  name: name,\r\n                },\r\n              }}\r\n            >\r\n              Review it\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        {reviews.length > 0 && (\r\n          <Grid className=\"product_reviews\" container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <h2>Reviews</h2>\r\n              <ReviewList reviews={reviews} />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","export default __webpack_public_path__ + \"static/media/loading.43b49ff9.gif\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Rating } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport loading from \"../img/loading.gif\";\r\nimport { ProductContext } from \"../App\";\r\n\r\nfunction ProductListItem({ product }) {\r\n  const { products, setProducts } = useContext(ProductContext);\r\n\r\n  const { name, id } = product;\r\n  const [reviews, setReviews] = useState([]);\r\n  const [avgRating, setAvgRating] = useState(0);\r\n  const [imgUrl, setImgUrl] = useState(loading);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3004/products/${id}/reviews`)\r\n      .then((res) => {\r\n        setReviews(res.data);\r\n        setImgUrl(\r\n          `https://via.assets.so/furniture.png?id=${id}&q=95&w=200&h=200&fit=fill`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    let avg = 0;\r\n    if (reviews.length) {\r\n      reviews.forEach((review) => {\r\n        avg += Number(review.star_rating);\r\n      });\r\n      setAvgRating(Math.floor(avg / reviews.length) || 0);\r\n    }\r\n  }, [reviews]);\r\n\r\n  useEffect(() => {\r\n    let updatedProduct = {\r\n      ...product,\r\n      imgUrl: imgUrl,\r\n      avgRating: avgRating,\r\n      reviews: reviews,\r\n    };\r\n    const prodToUpdateIdx = products.findIndex((prod) => prod.id === id);\r\n\r\n    setProducts([\r\n      ...products.slice(0, prodToUpdateIdx),\r\n      updatedProduct,\r\n      ...products.slice(prodToUpdateIdx + 1),\r\n    ]);\r\n  }, [reviews, imgUrl, avgRating, id]);\r\n\r\n  return (\r\n    <li className=\"ProductListItem\">\r\n      <div className=\"product_box\">\r\n        <img src={imgUrl} alt={name} height=\"200\" width=\"200\" />\r\n        <h2>{name}</h2>\r\n        <Rating\r\n          className=\"star-rating\"\r\n          name=\"read-only\"\r\n          value={avgRating}\r\n          readOnly\r\n        />\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat.\r\n        </p>\r\n\r\n        <Link\r\n          className=\"btn\"\r\n          to={{\r\n            pathname: `/products/${id}`,\r\n            state: {\r\n              name: name,\r\n              imgUrl: imgUrl,\r\n              avgRating: avgRating,\r\n              reviews: reviews,\r\n            },\r\n          }}\r\n        >\r\n          Reviews\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ProductListItem;\r\n","import React, { useContext } from \"react\";\r\nimport { ProductContext } from \"../App\";\r\nimport List from \"./List\";\r\nimport ProductListItem from \"./ProductListItem\";\r\n\r\nfunction ProductList(props) {\r\n  const { products } = useContext(ProductContext);\r\n\r\n  return (\r\n    <ul className=\"ProductList\">\r\n      <List\r\n        items={products}\r\n        resourceName=\"product\"\r\n        itemComponent={ProductListItem}\r\n      />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import { Box, Button, Grid, Rating, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//this is gonna be the body of the post request\r\nconst defaultValues = {\r\n  author: \"\",\r\n  headline: \"\",\r\n  body: \"\",\r\n  star_rating: 0,\r\n};\r\n\r\nfunction ReviewForm(props) {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const { name, imgUrl } = location.state;\r\n\r\n  //the inputs are controlled by the state\r\n  const [formValues, setFormValues] = useState(defaultValues);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`http://localhost:3004/products/${id}/reviews`, formValues)\r\n      .then((res) => {\r\n        setFormValues(defaultValues);\r\n        setTimeout(() => {\r\n          window.open(\"/products/\", \"_self\");\r\n        }, 500);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Something went wrong 😿: \" + err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n    console.log(\"input changed\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"ReviewForm\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item sm={12} className=\"grid-item\">\r\n            <h2>{name}</h2>\r\n            <img src={imgUrl} alt={name} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          className=\"form-container\"\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item sm={12} className=\"grid-item\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                <Grid className=\"form_grid-item\" item>\r\n                  <Rating\r\n                    name=\"star_rating\"\r\n                    value={Number(formValues.star_rating)}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid className=\"form_grid-item\" item>\r\n                  <TextField\r\n                    id=\"author-input\"\r\n                    name=\"author\"\r\n                    label=\"Author\"\r\n                    type=\"text\"\r\n                    value={formValues.author}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid className=\"form_grid-item\" item>\r\n                  <TextField\r\n                    id=\"headline-input\"\r\n                    name=\"headline\"\r\n                    label=\"Headline\"\r\n                    type=\"text\"\r\n                    value={formValues.headline}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid className=\"form_grid-item\" item>\r\n                  <TextField\r\n                    id=\"body-input\"\r\n                    name=\"body\"\r\n                    label=\"Your Review\"\r\n                    multiline\r\n                    type=\"text\"\r\n                    value={formValues.body}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Button\r\n                  className=\"btn button-btn\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewForm;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/Home\";\r\nimport Product from \"./Components/Product\";\r\nimport ProductList from \"./Components/ProductList\";\r\nimport ReviewForm from \"./Components/ReviewForm\";\r\n\r\nexport const ProductContext = createContext();\r\n\r\nexport default function OliverTakeHome() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3004/products`)\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <ProductContext.Provider value={{ products, setProducts }}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/products\">\r\n              <ProductList />\r\n            </Route>\r\n            <Route path=\"/products/:id\">\r\n              <Product />\r\n            </Route>\r\n            <Route path=\"/product/:id/add-review\">\r\n              <ReviewForm />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./css/styles.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}